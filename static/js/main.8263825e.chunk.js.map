{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/error/error.png","components/error/Error.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundaty/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","Error","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResources","url","a","fetch","res","status","json","getAllCharacters","offset","data","results","map","item","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","updateChar","Math","floor","random","onCharLoading","then","setState","catch","onError","this","clearInterval","timerId","spinner","errorMessage","content","onClick","mjolnir","Component","View","clazz","CharList","charList","newItemLoading","charEnded","getPageBottom","document","body","scrollHeight","window","innerHeight","documentElement","scrollTop","removeEventListener","onRequest","console","log","onCharsListLoading","onCharsLoaded","newCharList","ended","length","itemRefs","getRef","elem","push","onFocus","forEach","classList","remove","add","renderContent","arr","i","imgStyle","ref","style","tabIndex","props","onGetCharId","onKeyPress","e","key","addEventListener","disabled","display","Skeleton","CharInfo","charId","onCharLoaded","prevProps","skeleton","ErrorBoundary","errorInfo","children","App","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8263825e.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import './spinner.css';\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spin-oh31msyzogg\"><div className=\"ldio-jzq77jyz5rg\">\r\n            <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n        </div></div>\r\n    )\r\n}\r\n    \r\nexport default Spinner","export default __webpack_public_path__ + \"static/media/error.d18c7ca0.png\";","import img from './error.png';\r\nimport './error.scss';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className='error'>\r\n            <img src={img} alt=\"error\"/>\r\n            <div className='error-message'>\r\n                <h3>Error, something went wrong...</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=920f4bf8fae689e792556f4ea884f4db';\r\n    _baseOffset = 210;\r\n    \r\n    getResources = async (url) => {\r\n        let res = await fetch(url)\r\n\r\n        if(!res) {\r\n            throw new Error (`Could not fetch ${url}, starus ${res.status}`)\r\n        }\r\n\r\n        return await res.json()\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResources(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(item => this._transformCharacter(item));\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResources(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ?  `${char.description.slice(0, 210)}...` : 'There is no description for this character...',\r\n            thumbnail: char.thumbnail.path + \".\" +  char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;\r\n\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 3000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    marvelService = new MarvelService();\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService.getCharacter(id)\n            .then(char => {\n                this.setState({\n                    char,\n                    loading: false\n                })\n            }).catch(this.onError);\n            // this.foo.bar = 0; // проверка ErrorBoundary\n    }\n\n    onCharLoading = () => {\n        if(!this.state.error) {\n            this.setState({\n                loading: true\n            })\n        }\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render () {\n        const {char, loading, error} = this.state;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <Error/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {/* {loading ? <Spinner/> : <View char={char}/>} */}\n                {content}\n                {spinner}\n                {errorMessage}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\"\n                            onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    let clazz = 'randomchar__img'\n\n    if(thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        clazz += ' cover'\n    } else {\n        clazz += ' contain'\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={clazz}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    componentDidMount() {\n        this.onRequest();\n        window.addEventListener('scroll', this.getPageBottom)\n        // this.foo.bar = 0; // проверка ErrorBoundary\n    }\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.getPageBottom)\n    }\n\n    marvelService = new MarvelService();\n\n    getPageBottom = () => {\n        // console.log( window.innerHeight);\n        // console.log(Math.floor(document.documentElement.scrollTop));\n        // console.log(document.body.scrollHeight);\n        if(document.body.scrollHeight <= window.innerHeight + document.documentElement.scrollTop + 2){\n            if(this.state.charEnded){\n                window.removeEventListener('scroll', this.getPageBottom);\n            } else {\n                this.onRequest(this.state.offset)\n            }\n        }\n    }\n\n    onRequest = (offset) => {\n        console.log('request');\n        this.onCharsListLoading()\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharsLoaded)\n            .catch(this.onError);\n    }\n\n    onCharsLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n        this.setState(({charList, offset}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n\n    }\n\n    onCharsListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    itemRefs = [];\n\n    getRef = (elem) => {\n        this.itemRefs.push(elem);\n    }\n\n    onFocus = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected')\n        // console.log(this.itemRefs);\n    }\n\n    renderContent = (arr) => {\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return (\n\n                <li \n                key={item.id}\n                ref={this.getRef} \n                className=\"char__item\" \n                style={imgStyle}\n                tabIndex='0'\n                // onFocus={this.onFocus}\n                onClick={() => {\n                        this.props.onGetCharId(item.id);\n                        this.onFocus(i);\n                        }\n                }       \n                onKeyPress={(e)=> {\n                    console.log(e.key);\n                    if(e.key = ' ' || e.key === \"Enter\"){\n                        this.props.onGetCharId(item.id);\n                        this.onFocus(i);\n                    }\n                }}>\n                        <img src={item.thumbnail} alt={item.name}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n\n    }\n\n    render() {\n        const {charList, loading, error, newItemLoading, offset, charEnded} = this.state\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <Error/> : null;\n        const content = this.renderContent(charList);\n\n        return (\n            <div className=\"char__list\">\n                {spinner}\n                {errorMessage}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{display: charEnded ? 'none' : 'block'}}\n                    onClick={()=>this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\n\nCharList.propTypes = {\n    onGetCharId: PropTypes.func.isRequired\n}\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport Error from '../error/Error';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.charId !== prevProps.charId) {\n            this.updateChar()\n        }\n    }\n\n    marvelService = new MarvelService();\n    \n    updateChar = () => {\n        const {charId} = this.props;\n        if(!charId) {\n            return\n        }\n        this.onCharLoading()\n\n        this.marvelService.getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n            \n            // this.foo.bar = 0; // проверка ErrorBoundary\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        if(!this.state.error) {\n            this.setState({\n                loading: true\n            }) \n        }\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })  \n    }\n\n\n    render() {\n\n        const {char, loading, error} = this.state;\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <Error/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n        <div className=\"char__basics\">\n            <img src={thumbnail} alt={name} style={imgStyle}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n            {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.length > 0 ? null : 'There no comics with this character'}\n            {\n                // eslint-disable-next-line \n                comics.map((item, i) => {\n\n                    if(i < 10) {\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    } \n                })\n            }\n            {/* <li className=\"char__comics-item\">\n                All-Winners Squad: Band of Heroes (2011) #3\n            </li>\n            <li className=\"char__comics-item\">\n                Alpha Flight (1983) #50\n            </li>\n            <li className=\"char__comics-item\">\n                Amazing Spider-Man (1999) #503\n            </li>\n            <li className=\"char__comics-item\">\n                Amazing Spider-Man (1999) #504\n            </li>\n            <li className=\"char__comics-item\">\n                AMAZING SPIDER-MAN VOL. 7: BOOK OF EZEKIEL TPB (Trade Paperback)\n            </li>\n            <li className=\"char__comics-item\">\n                Amazing-Spider-Man: Worldwide Vol. 8 (Trade Paperback)\n            </li>\n            <li className=\"char__comics-item\">\n                Asgardians Of The Galaxy Vol. 2: War Of The Realms (Trade Paperback)\n            </li>\n            <li className=\"char__comics-item\">\n                Vengeance (2011) #4\n            </li>\n            <li className=\"char__comics-item\">\n                Avengers (1963) #1\n            </li>\n            <li className=\"char__comics-item\">\n                Avengers (1996) #1\n            </li> */}\n        </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport Error from \"../error/Error\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch (error,  errorInfo) {\r\n        console.log(error,  errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <Error/>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundaty/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        char: null\n    }\n\n    onGetCharId = (id) => {\n        this.setState({\n            char: id\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onGetCharId={this.onGetCharId}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.char}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}